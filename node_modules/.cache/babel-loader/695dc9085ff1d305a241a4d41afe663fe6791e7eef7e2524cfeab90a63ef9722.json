{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/users/UsersList.js\",\n  _s = $RefreshSig$();\nimport { useGetUsersQuery } from './usersApiSlice';\nimport User from './User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = () => {\n  _s();\n  // destrcuture the users data status and alias 'users'\n  const {\n    data: users,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetUsersQuery('usersList', {\n    pollingInterval: 60000,\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true\n  });\n  let content;\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 28\n  }, this);\n  //\n  if (isError) {\n    var _error$data;\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"{isError ? 'errmsg' : 'offscreen}\",\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  //\n  if (isSuccess) {\n    // desctructuring the ids array\n    const {\n      ids\n    } = users;\n    // create a 'table content' variable - essentially user data\n    // check for ids length - because it's an array\n    const tableContent = ids !== null && ids !== void 0 && ids.length ?\n    // map the ids array and inject our User components by passing the userId\n    ids.map(userId => /*#__PURE__*/_jsxDEV(User, {\n      userId: userId\n    }, userId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this)) : null;\n\n    // format a table with column headings\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__roles\",\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n    // return the overall content variable we just setup\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(UsersList, \"zZyL4hVeyTzknutarurcoklJ2gU=\", false, function () {\n  return [useGetUsersQuery];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["useGetUsersQuery","User","jsxDEV","_jsxDEV","UsersList","_s","data","users","isLoading","isSuccess","isError","error","pollingInterval","refetchOnFocus","refetchOnMountOrArgChange","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_error$data","className","message","ids","tableContent","length","map","userId","scope","_c","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/users/UsersList.js"],"sourcesContent":["import { useGetUsersQuery } from './usersApiSlice'\nimport User from './User'\n\nconst UsersList = () => {\n  // destrcuture the users data status and alias 'users'\n  const {\n    data: users,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetUsersQuery('usersList', {\n    pollingInterval: 60000,\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true,\n  })\n\n  let content\n  if (isLoading) content = <p>Loading...</p>\n  //\n  if (isError) {\n    content = (\n      <p className=\"{isError ? 'errmsg' : 'offscreen}\">\n        {error?.data?.message}\n      </p>\n    )\n  }\n  //\n  if (isSuccess) {\n    // desctructuring the ids array\n    const { ids } = users\n    // create a 'table content' variable - essentially user data\n    // check for ids length - because it's an array\n    const tableContent = ids?.length\n      ? // map the ids array and inject our User components by passing the userId\n        ids.map(userId => <User key={userId} userId={userId} />)\n      : null\n\n    // format a table with column headings\n    content = (\n      <table className=\"table table-users\">\n        <thead className=\"table__thead\">\n          <tr>\n            <th scope=\"col\" className=\"table__th user__username\">\n              Username\n            </th>\n            <th scope=\"col\" className=\"table__th user__roles\">\n              Roles\n            </th>\n            <th scope=\"col\" className=\"table__th user__edit\">\n              Edit\n            </th>\n          </tr>\n        </thead>\n        {/* // use the tableContent variable  */}\n        <tbody>{tableContent}</tbody>\n      </table>\n    )\n    // return the overall content variable we just setup\n    return <section>{content}</section>\n  }\n}\n\nexport default UsersList\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}