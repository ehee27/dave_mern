{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/Note.js\",\n  _s = $RefreshSig$();\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faPenToSquare } from '@fortawesome/free-solid-svg-icons'\n// import { useNavigate } from 'react-router-dom' // for editing\n// // import { useSelector } from 'react-redux';\n// // import { selectNoteById } from './notesApiSlice';\n// import { useGetNotesQuery } from './notesApiSlice'\n// import { memo } from 'react'\n\n// const Note = ({ noteId }) => {\n//   //\n//   const navigate = useNavigate()\n//   // const note = useSelector(state => selectNoteById(state, noteId));\n//   const { note } = useGetNotesQuery('noteslist', {\n//     selectFromResult: ({ data }) => ({\n//       note: data?.entitites[noteId],\n//     }),\n//   })\n//   if (note) {\n//     const created = new Date(note.createdAt).toLocaleDateString('en-US', {\n//       day: 'numeric',\n//       month: 'long',\n//     })\n//     //\n//     const updated = new Date(note.updatedAt).toLocaleDateString('en-US', {\n//       day: 'numeric',\n//       month: 'long',\n//     })\n//     //\n//     const handleEdit = () => navigate(`/dash/notes${noteId}`)\n\n//     return (\n//       <tr className=\"table__row\">\n//         <td className=\"table__cell note__status\">\n//           {note.completed ? (\n//             <span className=\"note__status--completed\">Completed</span>\n//           ) : (\n//             <span className=\"note__status--open\">Open</span>\n//           )}\n//         </td>\n//         <td className=\"table__cell note__created\">{created}</td>\n//         <td className=\"table__cell note__updated\">{updated}</td>\n//         <td className=\"table__cell note__title\">{note.title}</td>\n//         <td className=\"table__cell note__username\">{note.username}</td>\n//         <td className=\"table__cell\">\n//           <button className=\"icon-button table__button\" onClick={handleEdit}>\n//             <FontAwesomeIcon icon={faPenToSquare} />\n//           </button>\n//         </td>\n//       </tr>\n//     )\n//   } else return null\n// }\n// const memoizedNote = memo(Note)\n\n// export default memoizedNote\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetNotesQuery } from './notesApiSlice';\nimport { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = _ref => {\n  _s();\n  let {\n    noteId\n  } = _ref;\n  const {\n    note\n  } = useGetNotesQuery('notesList', {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        note: data === null || data === void 0 ? void 0 : data.entities[noteId]\n      };\n    }\n  });\n  const navigate = useNavigate();\n  if (note) {\n    const created = new Date(note.createdAt).toLocaleString('en-US', {\n      day: 'numeric',\n      month: 'long'\n    });\n    const updated = new Date(note.updatedAt).toLocaleString('en-US', {\n      day: 'numeric',\n      month: 'long'\n    });\n    const handleEdit = () => navigate(`/dash/notes/${noteId}`);\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"table__row\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__status\",\n        children: note.completed ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note__status--completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note__status--open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__created\",\n        children: created\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__updated\",\n        children: updated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__title\",\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell note__username\",\n        children: note.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table__cell\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button table__button\",\n          onClick: handleEdit,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPenToSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  } else return null;\n};\n_s(Note, \"Fa5Rrj8re8cX2BwWOSgfJcqHzjQ=\", false, function () {\n  return [useGetNotesQuery, useNavigate];\n});\n_c = Note;\nconst memoizedNote = /*#__PURE__*/memo(Note);\nexport default memoizedNote;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["FontAwesomeIcon","faPenToSquare","useNavigate","useGetNotesQuery","memo","jsxDEV","_jsxDEV","Note","_ref","_s","noteId","note","selectFromResult","_ref2","data","entities","navigate","created","Date","createdAt","toLocaleString","day","month","updated","updatedAt","handleEdit","className","children","completed","fileName","_jsxFileName","lineNumber","columnNumber","title","username","onClick","icon","_c","memoizedNote","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/Note.js"],"sourcesContent":["// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faPenToSquare } from '@fortawesome/free-solid-svg-icons'\n// import { useNavigate } from 'react-router-dom' // for editing\n// // import { useSelector } from 'react-redux';\n// // import { selectNoteById } from './notesApiSlice';\n// import { useGetNotesQuery } from './notesApiSlice'\n// import { memo } from 'react'\n\n// const Note = ({ noteId }) => {\n//   //\n//   const navigate = useNavigate()\n//   // const note = useSelector(state => selectNoteById(state, noteId));\n//   const { note } = useGetNotesQuery('noteslist', {\n//     selectFromResult: ({ data }) => ({\n//       note: data?.entitites[noteId],\n//     }),\n//   })\n//   if (note) {\n//     const created = new Date(note.createdAt).toLocaleDateString('en-US', {\n//       day: 'numeric',\n//       month: 'long',\n//     })\n//     //\n//     const updated = new Date(note.updatedAt).toLocaleDateString('en-US', {\n//       day: 'numeric',\n//       month: 'long',\n//     })\n//     //\n//     const handleEdit = () => navigate(`/dash/notes${noteId}`)\n\n//     return (\n//       <tr className=\"table__row\">\n//         <td className=\"table__cell note__status\">\n//           {note.completed ? (\n//             <span className=\"note__status--completed\">Completed</span>\n//           ) : (\n//             <span className=\"note__status--open\">Open</span>\n//           )}\n//         </td>\n//         <td className=\"table__cell note__created\">{created}</td>\n//         <td className=\"table__cell note__updated\">{updated}</td>\n//         <td className=\"table__cell note__title\">{note.title}</td>\n//         <td className=\"table__cell note__username\">{note.username}</td>\n//         <td className=\"table__cell\">\n//           <button className=\"icon-button table__button\" onClick={handleEdit}>\n//             <FontAwesomeIcon icon={faPenToSquare} />\n//           </button>\n//         </td>\n//       </tr>\n//     )\n//   } else return null\n// }\n// const memoizedNote = memo(Note)\n\n// export default memoizedNote\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons'\nimport { useNavigate } from 'react-router-dom'\nimport { useGetNotesQuery } from './notesApiSlice'\nimport { memo } from 'react'\n\nconst Note = ({ noteId }) => {\n  const { note } = useGetNotesQuery('notesList', {\n    selectFromResult: ({ data }) => ({\n      note: data?.entities[noteId],\n    }),\n  })\n\n  const navigate = useNavigate()\n\n  if (note) {\n    const created = new Date(note.createdAt).toLocaleString('en-US', {\n      day: 'numeric',\n      month: 'long',\n    })\n\n    const updated = new Date(note.updatedAt).toLocaleString('en-US', {\n      day: 'numeric',\n      month: 'long',\n    })\n\n    const handleEdit = () => navigate(`/dash/notes/${noteId}`)\n\n    return (\n      <tr className=\"table__row\">\n        <td className=\"table__cell note__status\">\n          {note.completed ? (\n            <span className=\"note__status--completed\">Completed</span>\n          ) : (\n            <span className=\"note__status--open\">Open</span>\n          )}\n        </td>\n        <td className=\"table__cell note__created\">{created}</td>\n        <td className=\"table__cell note__updated\">{updated}</td>\n        <td className=\"table__cell note__title\">{note.title}</td>\n        <td className=\"table__cell note__username\">{note.username}</td>\n\n        <td className=\"table__cell\">\n          <button className=\"icon-button table__button\" onClick={handleEdit}>\n            <FontAwesomeIcon icon={faPenToSquare} />\n          </button>\n        </td>\n      </tr>\n    )\n  } else return null\n}\n\nconst memoizedNote = memo(Note)\n\nexport default memoizedNote\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,IAAI,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,IAAI,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACtB,MAAM;IAAEG;EAAK,CAAC,GAAGR,gBAAgB,CAAC,WAAW,EAAE;IAC7CS,gBAAgB,EAAEC,KAAA;MAAA,IAAC;QAAEC;MAAK,CAAC,GAAAD,KAAA;MAAA,OAAM;QAC/BF,IAAI,EAAEG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACL,MAAM;MAC7B,CAAC;IAAA;EACH,CAAC,CAAC;EAEF,MAAMM,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,IAAIS,IAAI,EAAE;IACR,MAAMM,OAAO,GAAG,IAAIC,IAAI,CAACP,IAAI,CAACQ,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAC/DC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAG,IAAIL,IAAI,CAACP,IAAI,CAACa,SAAS,CAAC,CAACJ,cAAc,CAAC,OAAO,EAAE;MAC/DC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMG,UAAU,GAAGA,CAAA,KAAMT,QAAQ,CAAE,eAAcN,MAAO,EAAC,CAAC;IAE1D,oBACEJ,OAAA;MAAIoB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACxBrB,OAAA;QAAIoB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EACrChB,IAAI,CAACiB,SAAS,gBACbtB,OAAA;UAAMoB,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAE1D1B,OAAA;UAAMoB,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAChD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACL1B,OAAA;QAAIoB,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAEV;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxD1B,OAAA;QAAIoB,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAEJ;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxD1B,OAAA;QAAIoB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAEhB,IAAI,CAACsB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzD1B,OAAA;QAAIoB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAEhB,IAAI,CAACuB;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAE/D1B,OAAA;QAAIoB,SAAS,EAAC,aAAa;QAAAC,QAAA,eACzBrB,OAAA;UAAQoB,SAAS,EAAC,2BAA2B;UAACS,OAAO,EAAEV,UAAW;UAAAE,QAAA,eAChErB,OAAA,CAACN,eAAe;YAACoC,IAAI,EAAEnC;UAAc;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAET,CAAC,MAAM,OAAO,IAAI;AACpB,CAAC;AAAAvB,EAAA,CA5CKF,IAAI;EAAA,QACSJ,gBAAgB,EAMhBD,WAAW;AAAA;AAAAmC,EAAA,GAPxB9B,IAAI;AA8CV,MAAM+B,YAAY,gBAAGlC,IAAI,CAACG,IAAI,CAAC;AAE/B,eAAe+B,YAAY;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}