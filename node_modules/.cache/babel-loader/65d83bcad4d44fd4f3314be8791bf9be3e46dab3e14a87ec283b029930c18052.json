{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/EditNote.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import { selectNoteById } from './notesApiSlice';\n// import { selectAllUsers } from '../users/usersApiSlice';\nimport EditNoteForm from './EditNoteForm';\n//\nimport { useGetNotesQuery } from './notesApiSlice';\nimport { useGetUsersQuery } from '../users/usersApiSlice';\nimport useAuth from '../../hooks/useAuth';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditNote = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  // const note = useSelector(state => selectNoteById(state, id));\n  // const users = useSelector(selectAllUsers);\n  const {\n    username,\n    isManager,\n    isAdmin\n  } = useAuth();\n  //\n  const {\n    note\n  } = useGetNotesQuery('notesList', {\n    selectFromResult: _ref => {\n      let {\n        data\n      } = _ref;\n      return {\n        note: data === null || data === void 0 ? void 0 : data.entities[id]\n      };\n    }\n  });\n  //\n  const {\n    users\n  } = useGetUsersQuery('usersList', {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        users: data === null || data === void 0 ? void 0 : data.ids.map(id => data === null || data === void 0 ? void 0 : data.entities[id])\n      };\n    }\n  });\n  const content = note && users ? /*#__PURE__*/_jsxDEV(EditNoteForm, {\n    note: note,\n    users: users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n  //\n  return content;\n};\n_s(EditNote, \"BOYddH5EPZa2DAbszicJuxb0N/U=\", false, function () {\n  return [useParams, useAuth, useGetNotesQuery, useGetUsersQuery];\n});\n_c = EditNote;\nexport default EditNote;\nvar _c;\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"names":["useParams","EditNoteForm","useGetNotesQuery","useGetUsersQuery","useAuth","PulseLoader","jsxDEV","_jsxDEV","EditNote","_s","id","username","isManager","isAdmin","note","selectFromResult","_ref","data","entities","users","_ref2","ids","map","content","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/EditNote.js"],"sourcesContent":["import { useParams } from 'react-router-dom'\n// import { useSelector } from 'react-redux';\n// import { selectNoteById } from './notesApiSlice';\n// import { selectAllUsers } from '../users/usersApiSlice';\nimport EditNoteForm from './EditNoteForm'\n//\nimport { useGetNotesQuery } from './notesApiSlice'\nimport { useGetUsersQuery } from '../users/usersApiSlice'\nimport useAuth from '../../hooks/useAuth'\nimport PulseLoader from 'react-spinners/PulseLoader'\n\nconst EditNote = () => {\n  const { id } = useParams()\n  // const note = useSelector(state => selectNoteById(state, id));\n  // const users = useSelector(selectAllUsers);\n  const { username, isManager, isAdmin } = useAuth()\n  //\n  const { note } = useGetNotesQuery('notesList', {\n    selectFromResult: ({ data }) => ({\n      note: data?.entities[id],\n    }),\n  })\n  //\n  const { users } = useGetUsersQuery('usersList', {\n    selectFromResult: ({ data }) => ({\n      users: data?.ids.map(id => data?.entities[id]),\n    }),\n  })\n  const content =\n    note && users ? (\n      <EditNoteForm note={note} users={users} />\n    ) : (\n      <p>Loading...</p>\n    )\n  //\n  return content\n}\n\nexport default EditNote\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C;AACA;AACA;AACA,OAAOC,YAAY,MAAM,gBAAgB;AACzC;AACA,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,WAAW,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B;EACA;EACA,MAAM;IAAEW,QAAQ;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGT,OAAO,CAAC,CAAC;EAClD;EACA,MAAM;IAAEU;EAAK,CAAC,GAAGZ,gBAAgB,CAAC,WAAW,EAAE;IAC7Ca,gBAAgB,EAAEC,IAAA;MAAA,IAAC;QAAEC;MAAK,CAAC,GAAAD,IAAA;MAAA,OAAM;QAC/BF,IAAI,EAAEG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACR,EAAE;MACzB,CAAC;IAAA;EACH,CAAC,CAAC;EACF;EACA,MAAM;IAAES;EAAM,CAAC,GAAGhB,gBAAgB,CAAC,WAAW,EAAE;IAC9CY,gBAAgB,EAAEK,KAAA;MAAA,IAAC;QAAEH;MAAK,CAAC,GAAAG,KAAA;MAAA,OAAM;QAC/BD,KAAK,EAAEF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,GAAG,CAACC,GAAG,CAACZ,EAAE,IAAIO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACR,EAAE,CAAC;MAC/C,CAAC;IAAA;EACH,CAAC,CAAC;EACF,MAAMa,OAAO,GACXT,IAAI,IAAIK,KAAK,gBACXZ,OAAA,CAACN,YAAY;IAACa,IAAI,EAAEA,IAAK;IAACK,KAAK,EAAEA;EAAM;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAE1CpB,OAAA;IAAAqB,QAAA,EAAG;EAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CACjB;EACH;EACA,OAAOJ,OAAO;AAChB,CAAC;AAAAd,EAAA,CAzBKD,QAAQ;EAAA,QACGR,SAAS,EAGiBI,OAAO,EAE/BF,gBAAgB,EAMfC,gBAAgB;AAAA;AAAA0B,EAAA,GAZ9BrB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}