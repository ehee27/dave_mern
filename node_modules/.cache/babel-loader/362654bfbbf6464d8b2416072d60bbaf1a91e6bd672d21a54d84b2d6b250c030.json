{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/NewNoteForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { useAddNewNoteMutation } from './notesApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewNoteForm = () => {\n  _s();\n  var _error$data;\n  //\n  const navigate = useNavigate();\n  //\n  const [addNewNote, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewNoteMutation();\n  //\n  // state vars\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [completed, setCompleted] = useState(false);\n  //\n  useEffect(() => {\n    if (isSuccess) {\n      setTitle('');\n      setText('');\n      navigate('/dash/notes');\n    }\n  }, [isSuccess, navigate]);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onTextChanged = e => setText(e.target.value);\n  //\n  const onCompletedChanged = () => setCompleted(prev => !prev);\n  // alternative to calling '&' a bunch. All in an Array and use '.every'\n  const canSave = [title, text].every(Boolean) && !isLoading;\n  const onSaveNoteClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      await addNewNote({\n        title,\n        text\n      });\n    }\n  };\n  //classes that we may or may not want to apply\n  const errClass = isError ? 'errmsg' : 'offscreen';\n  const validTitleClass = !title ? 'form__input--incomplete' : '';\n  const validTextClass = !text ? 'form__input--incomplete' : '';\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSaveNoteClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__title-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-button\",\n            title: \"Save\",\n            disabled: !canSave,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"title\",\n        children: [\"Title: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\",\n          children: \"[3-50 letters]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validTitleClass}`,\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        autoComplete: \"off\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"text\",\n        children: [\"Text: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validTextClass}`,\n        id: \"text\",\n        name: \"text\",\n        type: \"textarea\",\n        value: text,\n        onChange: onTextChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"completed\",\n        children: [\"Completed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__checkbox\",\n          id: \"completed\",\n          name: \"completed\",\n          type: \"checkbox\",\n          checked: completed,\n          onChange: onCompletedChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return content;\n};\n_s(NewNoteForm, \"pcWp0ZBthoP96pUJp4A6Gv0CEFM=\", false, function () {\n  return [useNavigate, useAddNewNoteMutation];\n});\n_c = NewNoteForm;\nexport default NewNoteForm;\nvar _c;\n$RefreshReg$(_c, \"NewNoteForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","FontAwesomeIcon","faSave","useAddNewNoteMutation","jsxDEV","_jsxDEV","Fragment","_Fragment","NewNoteForm","_s","_error$data","navigate","addNewNote","isLoading","isSuccess","isError","error","title","setTitle","text","setText","completed","setCompleted","onTitleChanged","e","target","value","onTextChanged","onCompletedChanged","prev","canSave","every","Boolean","onSaveNoteClicked","preventDefault","errClass","validTitleClass","validTextClass","content","children","className","data","message","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","disabled","icon","htmlFor","id","name","type","autoComplete","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/NewNoteForm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { useAddNewNoteMutation } from './notesApiSlice';\n\nconst NewNoteForm = () => {\n  //\n  const navigate = useNavigate();\n  //\n  const [addNewNote, { isLoading, isSuccess, isError, error }] =\n    useAddNewNoteMutation();\n  //\n  // state vars\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [completed, setCompleted] = useState(false);\n  //\n  useEffect(() => {\n    if (isSuccess) {\n      setTitle('');\n      setText('');\n      navigate('/dash/notes');\n    }\n  }, [isSuccess, navigate]);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onTextChanged = e => setText(e.target.value);\n  //\n  const onCompletedChanged = () => setCompleted(prev => !prev);\n  // alternative to calling '&' a bunch. All in an Array and use '.every'\n  const canSave = [title, text].every(Boolean) && !isLoading;\n\n  const onSaveNoteClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      await addNewNote({ title, text });\n    }\n  };\n  //classes that we may or may not want to apply\n  const errClass = isError ? 'errmsg' : 'offscreen';\n  const validTitleClass = !title ? 'form__input--incomplete' : '';\n  const validTextClass = !text ? 'form__input--incomplete' : '';\n\n  const content = (\n    <>\n      <p className={errClass}>{error?.data?.message}</p>\n\n      <form className=\"form\" onSubmit={onSaveNoteClicked}>\n        <div className=\"form__title-row\">\n          <h2>New Note</h2>\n          <div className=\"form__action-buttons\">\n            <button className=\"icon-button\" title=\"Save\" disabled={!canSave}>\n              <FontAwesomeIcon icon={faSave} />\n            </button>\n          </div>\n        </div>\n        <label className=\"form__label\" htmlFor=\"title\">\n          Title: <span className=\"nowrap\">[3-50 letters]</span>\n        </label>\n        <input\n          className={`form__input ${validTitleClass}`}\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n\n        <label className=\"form__label\" htmlFor=\"text\">\n          Text: <span className=\"nowrap\"></span>\n        </label>\n        <input\n          className={`form__input ${validTextClass}`}\n          id=\"text\"\n          name=\"text\"\n          type=\"textarea\"\n          value={text}\n          onChange={onTextChanged}\n        />\n        <label className=\"form__label\" htmlFor=\"completed\">\n          Completed:\n          <input\n            className=\"form__checkbox\"\n            id=\"completed\"\n            name=\"completed\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={onCompletedChanged}\n          />\n        </label>\n      </form>\n    </>\n  );\n\n  return content;\n};\n\nexport default NewNoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}