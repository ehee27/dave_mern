{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/NotesList.js\",\n  _s = $RefreshSig$();\nimport { useGetNotesQuery } from './notesApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const {\n    data: notes,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetNotesQuery();\n  let content;\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 28\n  }, this);\n  //\n  if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: isError ? 'errmsg' : 'offscreen',\n      children: error === null || error === void 0 ? void 0 : error.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }, this);\n  }\n  if (isSuccess) {\n    const {\n      ids\n    } = notes;\n    const tableContent = ids !== null && ids !== void 0 && ids.length ? ids.map(noteId => /*#__PURE__*/_jsxDEV(Note, {\n      noteId: noteId\n    }, noteId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 27\n    }, this)) : null;\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table--notes\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__status\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__created\",\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__updated\",\n            children: \"Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__username\",\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"NotesList\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_s(NotesList, \"v47HEGE2ocyPHC5GwtinYdm/fuE=\", false, function () {\n  return [useGetNotesQuery];\n});\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["useGetNotesQuery","jsxDEV","_jsxDEV","NotesList","_s","data","notes","isLoading","isSuccess","isError","error","content","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ids","tableContent","length","map","noteId","Note","scope","_c","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/NotesList.js"],"sourcesContent":["import { useGetNotesQuery } from './notesApiSlice';\n\nconst NotesList = () => {\n  const {\n    data: notes,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetNotesQuery();\n\n  let content;\n\n  if (isLoading) content = <p>Loading...</p>;\n  //\n  if (isError) {\n    content = <p className={isError ? 'errmsg' : 'offscreen'}>{error?.data}</p>;\n  }\n\n  if (isSuccess) {\n    const { ids } = notes;\n\n    const tableContent = ids?.length\n      ? ids.map(noteId => <Note key={noteId} noteId={noteId} />)\n      : null;\n\n    content = (\n      <table className=\"table table--notes\">\n        <thead className=\"table__thead\">\n          <tr>\n            <th scope=\"col\" className=\"table__th note__status\">\n              Username\n            </th>\n            <th scope=\"col\" className=\"table__th note__created\">\n              Created\n            </th>\n            <th scope=\"col\" className=\"table__th note__updated\">\n              Updated\n            </th>\n            <th scope=\"col\" className=\"table__th note__title\">\n              Title\n            </th>\n            <th scope=\"col\" className=\"table__th note__username\">\n              Owner\n            </th>\n            <th scope=\"col\" className=\"table__th note__edit\">\n              Edit\n            </th>\n          </tr>\n        </thead>\n      </table>\n    );\n  }\n  return <h1>NotesList</h1>;\n};\n\nexport default NotesList;\n"],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IACJC,IAAI,EAAEC,KAAK;IACXC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACF,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EAEtB,IAAIW,OAAO;EAEX,IAAIJ,SAAS,EAAEI,OAAO,gBAAGT,OAAA;IAAAU,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC1C;EACA,IAAIP,OAAO,EAAE;IACXE,OAAO,gBAAGT,OAAA;MAAGe,SAAS,EAAER,OAAO,GAAG,QAAQ,GAAG,WAAY;MAAAG,QAAA,EAAEF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEL;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC7E;EAEA,IAAIR,SAAS,EAAE;IACb,MAAM;MAAEU;IAAI,CAAC,GAAGZ,KAAK;IAErB,MAAMa,YAAY,GAAGD,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEE,MAAM,GAC5BF,GAAG,CAACG,GAAG,CAACC,MAAM,iBAAIpB,OAAA,CAACqB,IAAI;MAAcD,MAAM,EAAEA;IAAO,GAAvBA,MAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC,CAAC,GACxD,IAAI;IAERL,OAAO,gBACLT,OAAA;MAAOe,SAAS,EAAC,oBAAoB;MAAAL,QAAA,eACnCV,OAAA;QAAOe,SAAS,EAAC,cAAc;QAAAL,QAAA,eAC7BV,OAAA;UAAAU,QAAA,gBACEV,OAAA;YAAIsB,KAAK,EAAC,KAAK;YAACP,SAAS,EAAC,wBAAwB;YAAAL,QAAA,EAAC;UAEnD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLd,OAAA;YAAIsB,KAAK,EAAC,KAAK;YAACP,SAAS,EAAC,yBAAyB;YAAAL,QAAA,EAAC;UAEpD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLd,OAAA;YAAIsB,KAAK,EAAC,KAAK;YAACP,SAAS,EAAC,yBAAyB;YAAAL,QAAA,EAAC;UAEpD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLd,OAAA;YAAIsB,KAAK,EAAC,KAAK;YAACP,SAAS,EAAC,uBAAuB;YAAAL,QAAA,EAAC;UAElD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLd,OAAA;YAAIsB,KAAK,EAAC,KAAK;YAACP,SAAS,EAAC,0BAA0B;YAAAL,QAAA,EAAC;UAErD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLd,OAAA;YAAIsB,KAAK,EAAC,KAAK;YAACP,SAAS,EAAC,sBAAsB;YAAAL,QAAA,EAAC;UAEjD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EACH;EACA,oBAAOd,OAAA;IAAAU,QAAA,EAAI;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC3B,CAAC;AAACZ,EAAA,CApDID,SAAS;EAAA,QAOTH,gBAAgB;AAAA;AAAAyB,EAAA,GAPhBtB,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}