{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/NotesList.js\",\n  _s = $RefreshSig$();\n// import { useGetNotesQuery } from './notesApiSlice';\n// import Note from './Note';\n\n// const NotesList = () => {\n//   const {\n//     data: notes,\n//     isLoading,\n//     isSuccess,\n//     isError,\n//     error,\n//   } = useGetNotesQuery();\n\n//   let content;\n//   if (isLoading) content = <p>Loading...</p>;\n//   //\n//   if (isError) {\n//     content = <p className={isError ? 'errmsg' : 'offscreen'}>{error?.data}</p>;\n//   }\n//   //\n//   if (isSuccess) {\n//     const { ids } = notes;\n\n//     const tableContent = ids?.length\n//       ? ids.map(noteId => <Note key={noteId} noteId={noteId} />)\n//       : null\n\n//     content = (\n//       <table className=\"table table--notes\">\n//         <thead className=\"table__thead\">\n//           <tr>\n//             <th scope=\"col\" className=\"table__th note__status\">\n//               Username\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__created\">\n//               Created\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__updated\">\n//               Updated\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__title\">\n//               Title\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__username\">\n//               Owner\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__edit\">\n//               Edit\n//             </th>\n//           </tr>\n//         </thead>\n//         <tbody>{tableContent}</tbody>\n//       </table>\n//     );\n//   }\n//   return content;\n// };\n\n// export default NotesList;\nimport { useGetNotesQuery } from './notesApiSlice';\nimport Note from './Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const {\n    data: notes,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetNotesQuery();\n  let content;\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 28\n  }, this);\n  if (isError) {\n    var _error$data;\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errmsg\",\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this);\n  }\n  if (isSuccess) {\n    const {\n      ids\n    } = notes;\n    const tableContent = ids !== null && ids !== void 0 && ids.length ? ids.map(noteId => /*#__PURE__*/_jsxDEV(Note, {\n      noteId: noteId\n    }, noteId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }, this)) : null;\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table--notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__status\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__created\",\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__updated\",\n            children: \"Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__username\",\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  return content;\n};\n_s(NotesList, \"v47HEGE2ocyPHC5GwtinYdm/fuE=\", false, function () {\n  return [useGetNotesQuery];\n});\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["useGetNotesQuery","Note","jsxDEV","_jsxDEV","NotesList","_s","data","notes","isLoading","isSuccess","isError","error","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_error$data","className","message","ids","tableContent","length","map","noteId","scope","_c","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/notes/NotesList.js"],"sourcesContent":["// import { useGetNotesQuery } from './notesApiSlice';\n// import Note from './Note';\n\n// const NotesList = () => {\n//   const {\n//     data: notes,\n//     isLoading,\n//     isSuccess,\n//     isError,\n//     error,\n//   } = useGetNotesQuery();\n\n//   let content;\n//   if (isLoading) content = <p>Loading...</p>;\n//   //\n//   if (isError) {\n//     content = <p className={isError ? 'errmsg' : 'offscreen'}>{error?.data}</p>;\n//   }\n//   //\n//   if (isSuccess) {\n//     const { ids } = notes;\n\n//     const tableContent = ids?.length\n//       ? ids.map(noteId => <Note key={noteId} noteId={noteId} />)\n//       : null\n\n//     content = (\n//       <table className=\"table table--notes\">\n//         <thead className=\"table__thead\">\n//           <tr>\n//             <th scope=\"col\" className=\"table__th note__status\">\n//               Username\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__created\">\n//               Created\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__updated\">\n//               Updated\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__title\">\n//               Title\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__username\">\n//               Owner\n//             </th>\n//             <th scope=\"col\" className=\"table__th note__edit\">\n//               Edit\n//             </th>\n//           </tr>\n//         </thead>\n//         <tbody>{tableContent}</tbody>\n//       </table>\n//     );\n//   }\n//   return content;\n// };\n\n// export default NotesList;\nimport { useGetNotesQuery } from './notesApiSlice';\nimport Note from './Note';\n\nconst NotesList = () => {\n  const {\n    data: notes,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetNotesQuery();\n\n  let content;\n\n  if (isLoading) content = <p>Loading...</p>;\n\n  if (isError) {\n    content = <p className=\"errmsg\">{error?.data?.message}</p>;\n  }\n\n  if (isSuccess) {\n    const { ids } = notes;\n\n    const tableContent = ids?.length\n      ? ids.map(noteId => <Note key={noteId} noteId={noteId} />)\n      : null;\n\n    content = (\n      <table className=\"table table--notes\">\n        <thead className=\"table__thead\">\n          <tr>\n            <th scope=\"col\" className=\"table__th note__status\">\n              Username\n            </th>\n            <th scope=\"col\" className=\"table__th note__created\">\n              Created\n            </th>\n            <th scope=\"col\" className=\"table__th note__updated\">\n              Updated\n            </th>\n            <th scope=\"col\" className=\"table__th note__title\">\n              Title\n            </th>\n            <th scope=\"col\" className=\"table__th note__username\">\n              Owner\n            </th>\n            <th scope=\"col\" className=\"table__th note__edit\">\n              Edit\n            </th>\n          </tr>\n        </thead>\n        <tbody>{tableContent}</tbody>\n      </table>\n    );\n  }\n\n  return content;\n};\nexport default NotesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}