{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/users/User.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom'; // for editing\n// import { useSelector } from 'react-redux';\n// import { selectUserById } from './usersApiSlice';\nimport { useGetUsersQuery } from './usersApiSlice';\nimport { memo } from 'react';\n\n// received userId from props to populate\n// useNavigate() to navigate away for editing\n// if the user exists we set a handle edit function - used later\n// set a 'roles string' to populate table\n// set a cell status variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  //\n  const navigate = useNavigate();\n  // const user = useSelector(state => selectUserById(state, userId));\n  const {\n    user\n  } = useGetUsersQuery('usersList', {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        user: data === null || data === void 0 ? void 0 : data.entities[userId]\n      };\n    }\n  });\n  if (user) {\n    const handleEdit = () => navigate(`/dash/users/${userId}`);\n    // pull all user roles - set to string - replace commas\n    const userRolesString = user.roles.toString().replaceAll(',', ', ');\n    //\n    const cellStatus = user.active ? '' : 'table__cell--inactive';\n    //\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"table__row user\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: `table__cell ${cellStatus}`,\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: `table__cell ${cellStatus}`,\n        children: userRolesString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: `table__cell ${cellStatus}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button table__button\",\n          onClick: handleEdit,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPenToSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else return null;\n};\n_s(User, \"CMr18SZYlDieKdiZo+wYYNUgxcQ=\", false, function () {\n  return [useNavigate, useGetUsersQuery];\n});\n_c = User;\nconst memoizedUser = /*#__PURE__*/memo(User);\nexport default memoizedUser;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["FontAwesomeIcon","faPenToSquare","useNavigate","useGetUsersQuery","memo","jsxDEV","_jsxDEV","User","_ref","_s","userId","navigate","user","selectFromResult","_ref2","data","entities","handleEdit","userRolesString","roles","toString","replaceAll","cellStatus","active","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","_c","memoizedUser","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/users/User.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPenToSquare } from '@fortawesome/free-solid-svg-icons'\nimport { useNavigate } from 'react-router-dom' // for editing\n// import { useSelector } from 'react-redux';\n// import { selectUserById } from './usersApiSlice';\nimport { useGetUsersQuery } from './usersApiSlice'\nimport { memo } from 'react'\n\n// received userId from props to populate\n// useNavigate() to navigate away for editing\n// if the user exists we set a handle edit function - used later\n// set a 'roles string' to populate table\n// set a cell status variable\n\nconst User = ({ userId }) => {\n  //\n  const navigate = useNavigate()\n  // const user = useSelector(state => selectUserById(state, userId));\n  const { user } = useGetUsersQuery('usersList', {\n    selectFromResult: ({ data }) => ({\n      user: data?.entities[userId],\n    }),\n  })\n  if (user) {\n    const handleEdit = () => navigate(`/dash/users/${userId}`)\n    // pull all user roles - set to string - replace commas\n    const userRolesString = user.roles.toString().replaceAll(',', ', ')\n    //\n    const cellStatus = user.active ? '' : 'table__cell--inactive'\n    //\n    return (\n      <tr className=\"table__row user\">\n        <td className={`table__cell ${cellStatus}`}>{user.username}</td>\n        <td className={`table__cell ${cellStatus}`}>{userRolesString}</td>\n        <td className={`table__cell ${cellStatus}`}>\n          <button className=\"icon-button table__button\" onClick={handleEdit}>\n            <FontAwesomeIcon icon={faPenToSquare} />\n          </button>\n        </td>\n      </tr>\n    )\n  } else return null\n}\nconst memoizedUser = memo(User)\n\nexport default memoizedUser\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,WAAW,QAAQ,kBAAkB,EAAC;AAC/C;AACA;AACA,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,IAAI,QAAQ,OAAO;;AAE5B;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACtB;EACA,MAAMG,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B;EACA,MAAM;IAAEU;EAAK,CAAC,GAAGT,gBAAgB,CAAC,WAAW,EAAE;IAC7CU,gBAAgB,EAAEC,KAAA;MAAA,IAAC;QAAEC;MAAK,CAAC,GAAAD,KAAA;MAAA,OAAM;QAC/BF,IAAI,EAAEG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACN,MAAM;MAC7B,CAAC;IAAA;EACH,CAAC,CAAC;EACF,IAAIE,IAAI,EAAE;IACR,MAAMK,UAAU,GAAGA,CAAA,KAAMN,QAAQ,CAAE,eAAcD,MAAO,EAAC,CAAC;IAC1D;IACA,MAAMQ,eAAe,GAAGN,IAAI,CAACO,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC;IACnE;IACA,MAAMC,UAAU,GAAGV,IAAI,CAACW,MAAM,GAAG,EAAE,GAAG,uBAAuB;IAC7D;IACA,oBACEjB,OAAA;MAAIkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC7BnB,OAAA;QAAIkB,SAAS,EAAG,eAAcF,UAAW,EAAE;QAAAG,QAAA,EAAEb,IAAI,CAACc;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChExB,OAAA;QAAIkB,SAAS,EAAG,eAAcF,UAAW,EAAE;QAAAG,QAAA,EAAEP;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClExB,OAAA;QAAIkB,SAAS,EAAG,eAAcF,UAAW,EAAE;QAAAG,QAAA,eACzCnB,OAAA;UAAQkB,SAAS,EAAC,2BAA2B;UAACO,OAAO,EAAEd,UAAW;UAAAQ,QAAA,eAChEnB,OAAA,CAACN,eAAe;YAACgC,IAAI,EAAE/B;UAAc;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAET,CAAC,MAAM,OAAO,IAAI;AACpB,CAAC;AAAArB,EAAA,CA5BKF,IAAI;EAAA,QAESL,WAAW,EAEXC,gBAAgB;AAAA;AAAA8B,EAAA,GAJ7B1B,IAAI;AA6BV,MAAM2B,YAAY,gBAAG9B,IAAI,CAACG,IAAI,CAAC;AAE/B,eAAe2B,YAAY;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}