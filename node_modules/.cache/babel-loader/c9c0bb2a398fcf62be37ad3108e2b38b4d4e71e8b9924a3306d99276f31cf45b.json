{"ast":null,"code":"import { apiSlice } from '../../app/api/apiSlice';\nimport { logOut } from './authSlice';\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: credentials => ({\n        url: '/auth',\n        method: 'POST',\n        body: {\n          ...credentials\n        }\n      })\n    }),\n    sendLogout: builder.mutation({\n      query: () => ({\n        url: '/auth/logout',\n        method: 'POST'\n      }),\n      async onQueryStarted(arg, _ref) {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref;\n        try {\n          // aueryFulfilled returns data object, we could define and look at\n          const {\n            data\n          } = await queryFulfilled;\n          console.log(data);\n          dispatch(logOut());\n          setTimeout(() => {\n            dispatch(apiSlice.util.resetApiState());\n          }, 1000);\n          // dispatch(apiSlice.util.resetApiState())\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }),\n    refresh: builder.mutation({\n      query: () => ({\n        url: '/auth/refresh',\n        method: 'GET'\n      })\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useSendLogoutMutation,\n  useRefreshMutation\n} = authApiSlice;","map":{"version":3,"names":["apiSlice","logOut","authApiSlice","injectEndpoints","endpoints","builder","login","mutation","query","credentials","url","method","body","sendLogout","onQueryStarted","arg","_ref","dispatch","queryFulfilled","data","console","log","setTimeout","util","resetApiState","err","refresh","useLoginMutation","useSendLogoutMutation","useRefreshMutation"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/auth/authApiSlice.js"],"sourcesContent":["import { apiSlice } from '../../app/api/apiSlice'\nimport { logOut } from './authSlice'\n\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: credentials => ({\n        url: '/auth',\n        method: 'POST',\n        body: { ...credentials },\n      }),\n    }),\n    sendLogout: builder.mutation({\n      query: () => ({\n        url: '/auth/logout',\n        method: 'POST',\n      }),\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\n        try {\n          // aueryFulfilled returns data object, we could define and look at\n          const { data } = await queryFulfilled\n          console.log(data)\n          dispatch(logOut())\n          setTimeout(() => {\n            dispatch(apiSlice.util.resetApiState())\n          }, 1000)\n          // dispatch(apiSlice.util.resetApiState())\n        } catch (err) {\n          console.log(err)\n        }\n      },\n    }),\n    refresh: builder.mutation({\n      query: () => ({\n        url: '/auth/refresh',\n        method: 'GET',\n      }),\n    }),\n  }),\n})\n\nexport const { useLoginMutation, useSendLogoutMutation, useRefreshMutation } =\n  authApiSlice\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,MAAM,QAAQ,aAAa;AAEpC,OAAO,MAAMC,YAAY,GAAGF,QAAQ,CAACG,eAAe,CAAC;EACnDC,SAAS,EAAEC,OAAO,KAAK;IACrBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAC;MACtBC,KAAK,EAAEC,WAAW,KAAK;QACrBC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAE,GAAGH;QAAY;MACzB,CAAC;IACH,CAAC,CAAC;IACFI,UAAU,EAAER,OAAO,CAACE,QAAQ,CAAC;MAC3BC,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMG,cAAcA,CAACC,GAAG,EAAAC,IAAA,EAAgC;QAAA,IAA9B;UAAEC,QAAQ;UAAEC;QAAe,CAAC,GAAAF,IAAA;QACpD,IAAI;UACF;UACA,MAAM;YAAEG;UAAK,CAAC,GAAG,MAAMD,cAAc;UACrCE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;UACjBF,QAAQ,CAAChB,MAAM,CAAC,CAAC,CAAC;UAClBqB,UAAU,CAAC,MAAM;YACfL,QAAQ,CAACjB,QAAQ,CAACuB,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC;UACzC,CAAC,EAAE,IAAI,CAAC;UACR;QACF,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;QAClB;MACF;IACF,CAAC,CAAC;IACFC,OAAO,EAAErB,OAAO,CAACE,QAAQ,CAAC;MACxBC,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAE,eAAe;QACpBC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEgB,gBAAgB;EAAEC,qBAAqB;EAAEC;AAAmB,CAAC,GAC1E3B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}