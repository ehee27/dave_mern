{"ast":null,"code":"var _jsxFileName = \"/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/users/NewUserForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { useAddNewUserMutation } from './usersApiSlice';\nimport { ROLES } from '../../config/roles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\n//\n\nconst NewUserForm = () => {\n  _s();\n  //\n  const navigate = useNavigate();\n  //\n  const [addNewUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewUserMutation();\n\n  // state vars\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [roles, setRoles] = useState(['Employee']);\n\n  // useEffect to valid\n  useEffect(() => {\n    setValidUsername(USER_REGEX.text(username));\n  }, [username]);\n  //\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n  }, [password]);\n  //\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername('');\n      setPassword('');\n      setRoles([]);\n      navigate('/dash/users');\n    }\n  }, [isSuccess, navigate]);\n  const onUsernameChanged = e => setUsername(e.target.value);\n  const onPasswordChanged = e => setPassword(e.target.value);\n\n  // we'll be selecting options from a form - 'HTMLCollection'\n  const onRolesChanged = e => {\n    const values = Array.from(e.target.selectedOptions, option => option.value);\n    setRoles(values);\n  };\n\n  // alternative to calling '&' a bunch. All in an Array and use '.every'\n  const canSave = [roles.length, validUsername, validPassword].every(Boolean) && !isLoading;\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      await addNewUser({\n        username,\n        password,\n        roles\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"New User Form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n_s(NewUserForm, \"5dRO3/Z2uUiga0zuka8m8BKxAQ4=\", false, function () {\n  return [useNavigate, useAddNewUserMutation];\n});\n_c = NewUserForm;\nexport default NewUserForm;\nvar _c;\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","FontAwesomeIcon","faSave","useAddNewUserMutation","ROLES","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","NewUserForm","_s","navigate","addNewUser","isLoading","isSuccess","isError","error","username","setUsername","validUsername","setValidUsername","password","setPassword","validPassword","setValidPassword","roles","setRoles","text","test","onUsernameChanged","e","target","value","onPasswordChanged","onRolesChanged","values","Array","from","selectedOptions","option","canSave","length","every","Boolean","onSaveUserClicked","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/scottlucas/Desktop/dave_mern_frontend/dave_mern_frontend/src/features/users/NewUserForm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { useAddNewUserMutation } from './usersApiSlice';\nimport { ROLES } from '../../config/roles';\n\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\n//\n\nconst NewUserForm = () => {\n  //\n  const navigate = useNavigate();\n  //\n  const [addNewUser, { isLoading, isSuccess, isError, error }] =\n    useAddNewUserMutation();\n\n  // state vars\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [roles, setRoles] = useState(['Employee']);\n\n  // useEffect to valid\n  useEffect(() => {\n    setValidUsername(USER_REGEX.text(username));\n  }, [username]);\n  //\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n  }, [password]);\n  //\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername('');\n      setPassword('');\n      setRoles([]);\n      navigate('/dash/users');\n    }\n  }, [isSuccess, navigate]);\n\n  const onUsernameChanged = e => setUsername(e.target.value);\n  const onPasswordChanged = e => setPassword(e.target.value);\n\n  // we'll be selecting options from a form - 'HTMLCollection'\n  const onRolesChanged = e => {\n    const values = Array.from(e.target.selectedOptions, option => option.value);\n    setRoles(values);\n  };\n\n  // alternative to calling '&' a bunch. All in an Array and use '.every'\n  const canSave =\n    [roles.length, validUsername, validPassword].every(Boolean) && !isLoading;\n\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      await addNewUser({ username, password, roles });\n    }\n  };\n\n  return <div>New User Form</div>;\n};\n\nexport default NewUserForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}